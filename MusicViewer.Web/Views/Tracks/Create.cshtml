@using INF148187148204.MusicViewer.Core;
@model INF148187148204.MusicViewer.Interfaces.ITrack

@{
    ViewData["Title"] = "Create";
    var genres = Enum.GetValues(typeof(Genre)).Cast<Genre>();
}

<h1>Create</h1>

<h4>ITrack</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ReleaseYear" class="control-label"></label>
                <input asp-for="ReleaseYear" class="form-control" />
                <span asp-validation-for="ReleaseYear" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Artist" class="control-label"></label>
				<select asp-for="Artist" class="form-control">
                    @foreach (var artist in ViewBag.Artists)
					{
						<option value="@((int)artist.ID)">@artist.Name</option>
					}
				</select>
				<span asp-validation-for="Genre" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Genre" class="control-label"></label>
			    <select asp-for="Genre" class="form-control">
                    @foreach (var genre in genres)
                    {
                        <option value="@((int)genre)">@genre.ToString()</option>
                    }
				</select>
				<span asp-validation-for="Genre" class="text-danger"></span>
			</div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
